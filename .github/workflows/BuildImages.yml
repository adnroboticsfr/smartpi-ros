name: Build Images
on:
  push:
    branches:
      - "develop"
    paths:
      - "boards/**"
      - "configs/**"
      - ".github/workflows/BuildImages.yml"
      - "actions/**"
      - "userpatches/**"

  pull_request:
    types: [opened, edited, reopened, synchronize]
    paths:
      - "boards/**"
      - "configs/**"
      - ".github/workflows/**"
      - "actions/**"
      - "userpatches/**"

  workflow_dispatch:

concurrency:
  group: ci-buildtrain-${{ github.ref }}-1
  cancel-in-progress: true

jobs:
  setup:
    name: Create Matrix
    runs-on: ubuntu-latest
    outputs:
      configfiles: ${{ steps.set-matrix.outputs.configfiles }}
      time: ${{ steps.time.outputs.time }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create Matrix
        id: set-matrix
        run: |
          JSON=$(find ${{ github.workspace }}/configs -type f -name "*.conf" -printf '%f\n' | sed '/config*/d;s#.conf##' | jq -R -s -c 'split("\n")[:-1]')
          echo "configfiles=${JSON}" >> $GITHUB_OUTPUT
          echo "::group::Build Matrix"
          echo "${JSON}"
          echo "::endgroup::"

      - name: Get Time
        id: time
        uses: nanzm/get-time-action@v2.0
        with:
          timeZone: UTC
          format: "YYYY-MM-DD-HHmm"

  build:
    name: Build Images
    runs-on: ubuntu-latest
    needs: [setup]
    strategy:
      fail-fast: true
      matrix:
        configfile: ${{ fromJson(needs.setup.outputs.configfiles) }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          path: build-configs
          fetch-depth: 0

      - name: Build
        uses: ./build-configs/actions/build-image
        with:
          configfile: ${{ matrix.configfile }}

      - name: Generate Name Prefix
        id: image_name
        shell: bash
        run: |
          source ./build-configs/configs/config-default.conf
          img_name="${VENDOR}"
          img_name="${img_name}-${{ matrix.configfile }}"
          img_name="${img_name}-${{ needs.setup.outputs.time }}"
          echo "image_name=${img_name}" >> $GITHUB_OUTPUT
          echo "::group::Image name"
          echo "Image name: ${img_name}"
          echo "::endgroup::"

      - name: Rename Files
        run: |
          cd ${{ github.workspace }}/build/output/images/
          mv *.img ${{ steps.image_name.outputs.image_name }}.img
          mv *.txt ${{ steps.image_name.outputs.image_name }}.txt

      - name: Compressing Image
        run: |
          cd ${{ github.workspace }}/build/output/images/
          xz -efkvzT0 ${{ steps.image_name.outputs.image_name }}.img || true

      - name: Calculating checksums
        run: |
          cd ${{ github.workspace }}/build/output/images/
          sha256sum ${{ steps.image_name.outputs.image_name }}.img > ${{ steps.image_name.outputs.image_name }}.img.sha256
          sha256sum ${{ steps.image_name.outputs.image_name }}.img.xz > ${{ steps.image_name.outputs.image_name }}.img.xz.sha256

      - name: Upload compressed image
        uses: actions/upload-artifact@v4.3.0
        with:
          name: ${{ steps.image_name.outputs.image_name }}.img.xz
          path: ${{ github.workspace }}/build/output/images/${{ steps.image_name.outputs.image_name }}.img.xz

      - name: Upload compressed image checksum
        uses: actions/upload-artifact@v4.3.0
        with:
          name: ${{ steps.image_name.outputs.image_name }}.img.xz.sha256
          path: ${{ github.workspace }}/build/output/images/${{ steps.image_name.outputs.image_name }}.img.xz.sha256

      - name: Upload Build Summary
        uses: actions/upload-artifact@v4.3.0
        with:
          name: ${{ steps.image_name.outputs.image_name }}.txt
          path: ${{ github.workspace }}/build/output/images/${{ steps.image_name.outputs.image_name }}.txt
